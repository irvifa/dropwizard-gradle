apiVersion: v1
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3ekNDQXRlZ0F3SUJBZ0lKQUtnakFWS2lEY1A1TUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdOTVFzd0NRWUQKVlFRR0V3SkpSREVRTUE0R0ExVUVDQXdIU21GcllYSjBZVEVRTUE0R0ExVUVCd3dIU21GcllYSjBZVEVoTUI4RwpBMVVFQ2d3WVNXNTBaWEp1WlhRZ1YybGtaMmwwY3lCUWRIa2dUSFJrTVJVd0V3WURWUVFEREF3cUxtTnNiM1ZrCkxtZHZiMmN4SURBZUJna3Foa2lHOXcwQkNRRVdFV2x5ZG1rdVptRkFaMjFoYVd3dVkyOXRNQjRYRFRFM01Ea3cKTnpFeE5ERTFNMW9YRFRFNE1Ea3dOekV4TkRFMU0xb3dnWTB4Q3pBSkJnTlZCQVlUQWtsRU1SQXdEZ1lEVlFRSQpEQWRLWVd0aGNuUmhNUkF3RGdZRFZRUUhEQWRLWVd0aGNuUmhNU0V3SHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYCmFXUm5hWFJ6SUZCMGVTQk1kR1F4RlRBVEJnTlZCQU1NRENvdVkyeHZkV1F1WjI5dlp6RWdNQjRHQ1NxR1NJYjMKRFFFSkFSWVJhWEoyYVM1bVlVQm5iV0ZwYkM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBdwpnZ0VLQW9JQkFRRHZ6M0lSYU1SS1BqWW9Mc0hDM2tScGhLcXJJejNUemZwSXkwZWlqN2J6WG0vb2ViTnVQMFBBCnExOWh4SXZQbENlZ2xQRUhFRy8wM0g4bzhUZUNocE1nbHVZTFJFbW1LWk1wL1JpZHJvckFBZUhPU1IwUXdGeWUKWXBydEowRnROSkJESGlFQytRYlVxZndSY3NubVJIMmhCRVlCTm5weW9MMkFVY2dTdGdwSlE0dzF4ZTI5dUVwQQo2RVBrRVJIdVFsdzl2QWhrR01RSXUwKzJuN1F6QWtFYllVSHpZQUJUckJ2RXRmNXdOZ0NNWVpEZnMxZG1kNTRVCm1VaUlqcVF4dXpHQ1hPUVM1a0JTaE9GbjUzZEpPZTFPR290S24vMTdNU3M1eDRBZjRhd2xkWmZUZU0vZG05bFAKQkptb1FXTG11UGwvbFBsSU5PS0FORFo0WVI3NVBLY1ZBZ01CQUFHalVEQk9NQjBHQTFVZERnUVdCQlJQTTVyYwpyQWUyM0Qvd1drcElmKzJJdlNENDl6QWZCZ05WSFNNRUdEQVdnQlJQTTVyY3JBZTIzRC93V2twSWYrMkl2U0Q0Cjl6QU1CZ05WSFJNRUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYm5EQzhUaXNCZmRNcGd4OG8KcFVleS95ODA5Wlk0ZG9qYWlpalQ0bHJSMzJjK0hvUEVETGhGNkdJUm9rY29kQnp0alh2Rmk0alhyUUZlSzFDQgpMRlp1enhBelRFL0xMQm5EeGNMVUhmWWh2TmhNY1pGdjR2K1FLSUF1SXEvWjFWZE8rcnpkQ3orSzUwYlV1ejFhCjIxeURoMVo2RVpNT3dSNkVhbUV0a0ttOVBYV21NQVJSQ21YTy8zSHZBNU9MNEJMM1RYaU9nZHhsY2VzRXVHTXUKUWRiVFpWekdONk1oNzI1WWpIeW50SzdxZmpVSlRMK0NvMTdGZG9ob0hKRi8vTk5EV0FzU3c3OTg0dkV0N3VHbApUdGdGSGJxL0xyUzYxUGtXQ3dMUmJrZ1IrbUZDbGE4MlBGa0E1bS9Pc2YyeHBVMXozWHYwNEIxVFBIWlE2UGd2CkNrNGgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRHZ6M0lSYU1SS1BqWW8KTHNIQzNrUnBoS3FySXozVHpmcEl5MGVpajdielhtL29lYk51UDBQQXExOWh4SXZQbENlZ2xQRUhFRy8wM0g4bwo4VGVDaHBNZ2x1WUxSRW1tS1pNcC9SaWRyb3JBQWVIT1NSMFF3RnllWXBydEowRnROSkJESGlFQytRYlVxZndSCmNzbm1SSDJoQkVZQk5ucHlvTDJBVWNnU3RncEpRNHcxeGUyOXVFcEE2RVBrRVJIdVFsdzl2QWhrR01RSXUwKzIKbjdRekFrRWJZVUh6WUFCVHJCdkV0ZjV3TmdDTVlaRGZzMWRtZDU0VW1VaUlqcVF4dXpHQ1hPUVM1a0JTaE9Gbgo1M2RKT2UxT0dvdEtuLzE3TVNzNXg0QWY0YXdsZFpmVGVNL2RtOWxQQkptb1FXTG11UGwvbFBsSU5PS0FORFo0CllSNzVQS2NWQWdNQkFBRUNnZ0VCQU5abm9GS1VXcnNPT0JsaEJIZVhoWTdad0VWV010Y0ZsN294bFJCd2NWL1IKbFRoQ1p2d3dzQUM0dDRTUDEzaDF1NkJFeWVKSS9lL3NtL3djL2taQ3o1UVpsZitJeEZnOVg0Znc4MnMzUEhKQwp2SUpVdUJuY0FuTFJNamJLSENMcEZmb01HL091ZGo3NDQ1Y3VDL2xHVHhRQTRCNEJlU1MzTmZaZUtBVWlvTHV5Clg1eW5IMWM0cVlUMlE4YXFtVVJPdHdoNzdkWmdjSkxHdGcyeGtQS2h2Y2ErbE5wanM5cUx1WHQ0eGRwQ0tBTVUKaW15Y2VPeXFrdWxnODNocDJpY3VHa3JoU096OUFRNHJxWHpWV2p1bnBONTZLdGhKWk5qQ3ArUjRHODhJcG50MgpybVZGVmNKSGZZQit6cGdKUXpXNEJmbzRCUUdtUS9zdEtXNFo1L1MvdHBrQ2dZRUEvaWdGQ1JJUDlVWlRIK2FqCmV3dW9lNitFMWRpMGRIakFTREw3eUVoWjhuYWU5OG9wVjg4cFFPSXhiSkJXcEcwcHpibXc2WGNRWTI4WWhkVncKUERzRFRqOHkzcHFWVHd3eU16Y0U1OHBpVGl3UjNuQWhMWlhoT0o2UUI5VDNzVDVmbml3bUhjdDBFNFV6MVA1NwpJVXZ6eFVmTSs5ZXR4dmcxdDNlMi9CMjhrd01DZ1lFQThZekk0MzFJMGtJeE5WL3NHWTgycUxKR0Jrc2ZOdXBxCkRVNUpnN0FReFBTTnZaUUl5RDZidEw4ZVk3VG1CR0NZQmZqdk9hSDM2cFJjQTExSFYzUDExOWlhMjNTK0czbDkKZU80YTFFY0JvZENraWlLVEtycERDZVdzaXF3dk9RNW05ZU5BQkkwdXF2MFpHUEE5TTlpMWxPTHF0YmY5dUZhNwpoQlVvaUZBR05nY0NnWUIyd2Y1d1daZEpWYjM3dHdxR3NWRGQwb3J3WFowY20xdkZvTVVUdGZNSm43SHlPTzJPCmtVZEdnU3IwL3BEdHJmQ05wNG5wM1crejlySnZ2dWI5emRsaWs1ZFNlc3J2cjlRNUtDbExvYjdEcGtZSE9UL1gKakNROEQ2TmZkWHp6dmlCeHlWRmFOTG9kY08xaVJqTUV3UGU4SkN1OU5lK0dmRzZsTnZReTVEWThQd0tCZ0VjawpOYzU2aWNZVFpMYlpwNG5ubWl1WlJmSjRrWnIwODRNenVZY2xoZXJjTkJyUHpMNWRZaktiejNHQ1IvU21GbUE3Cjd3bEVZT1lnQi9HZHVYTlNYZWZTamRsd3lzVUF4U21teHhRYVRhckE3cFVZbGN1UnpFalA4ajl0Y3dNVThOSWUKdWk0Yy9zK3hkNERXME0vQ1ZjaWlCSXE4dytkVTlDbDBxZGxyNkVobEFvR0JBT1h2ckU5cTBycmtveVA3SFRYTwpKSWozTlZlM1paRmFnOFRDKzhKdFJ2VWNvL3pjS3Iya0FnY0gySFN1WnFVZmlPRGE3emJTSFAxZ3hjblFwSWljCk9uZWVPNGZKeC9iL2xGY0phZzk0K29Yd1loS08rd2JZRVVqL3dBYU40K2YyeEtlcjlMWkZ5ZFBrVUJRY3NSWmIKSEhQQ0VOd2RvSWJGV2EzZWhXY2RNcnk4Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
kind: Secret
metadata:
  name: nginx-key
  namespace: default
type: Opaque
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-world
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: hello-world
          servicePort: 80
  tls:
    - secretName: nginx-key
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: hello-world
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hello-world
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-world
        image: gcr.io/<project-id>./test:v2
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /hello-world
            port: 8080
          periodSeconds: 1
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP